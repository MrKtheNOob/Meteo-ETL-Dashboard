{"timestamp":"2025-07-02T15:00:03.561482","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-02T15:00:03.562347","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-02T15:00:04.078148Z","level":"info","event":"INFO: Starting DB cleanup...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:06.389918Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:06.390200Z","level":"info","event":"--- Disabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:07.091437Z","level":"info","event":"SUCCESS: Disabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:07.091691Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:07.091923Z","level":"info","event":"--- Dropping existing tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:07.092078Z","level":"info","event":"--- Dropping table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:07.894493Z","level":"info","event":"SUCCESS: Dropping table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:07.894818Z","level":"info","event":"--- Dropping table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:08.693379Z","level":"info","event":"SUCCESS: Dropping table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:08.693652Z","level":"info","event":"--- Dropping table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:09.597126Z","level":"info","event":"SUCCESS: Dropping table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:09.597528Z","level":"info","event":"--- Re-enabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:10.499524Z","level":"info","event":"SUCCESS: Re-enabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:10.500083Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:10.500282Z","level":"info","event":"--- Creating new tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:10.500419Z","level":"info","event":"--- Creating table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:11.502208Z","level":"info","event":"SUCCESS: Creating table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:11.502531Z","level":"info","event":"--- Creating table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:12.303253Z","level":"info","event":"SUCCESS: Creating table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:12.303497Z","level":"info","event":"--- Creating table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.005692Z","level":"info","event":"SUCCESS: Creating table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.006102Z","level":"info","event":"--- Creating table etl_logs ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.308162Z","level":"info","event":"ERROR: Failed to execute 'Creating table etl_logs' - (1050, \"Table 'etl_logs' already exists\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.308477Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.308686Z","level":"info","event":"SUCCESS: Database cleanup and recreation completed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.308855Z","level":"info","event":"INFO: DB cleanup done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T15:00:13.311295","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
