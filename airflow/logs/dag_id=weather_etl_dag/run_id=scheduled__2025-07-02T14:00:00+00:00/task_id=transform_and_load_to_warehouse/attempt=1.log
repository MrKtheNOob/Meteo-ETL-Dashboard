{"timestamp":"2025-07-02T14:03:36.339019","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-02T14:03:36.340109","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-02T14:03:36.852777Z","level":"info","event":"INFO: Starting transform/load to warehouse...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:36.852924Z","level":"info","event":"INFO: Starting ETL process...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:36.853039Z","level":"info","event":"INFO: Attempting to establish database connections...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:39.486818Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:41.793208Z","level":"info","event":"Database connection to 'meteo_warehouse' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:41.793406Z","level":"info","event":"SUCCESS: PyMySQL connections established.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:46.506488Z","level":"info","event":"SUCCESS: SQLAlchemy engine for target database created and tested.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:46.506686Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:46.506821Z","level":"info","event":"INFO: Beginning data extraction from source database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:46.908542Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.208660Z","level":"info","event":"INFO: Extracted 6 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.510374Z","level":"info","event":"INFO: Extracted 21 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.510531Z","level":"info","event":"SUCCESS: All necessary data extracted from source tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.510615Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.510688Z","level":"info","event":"INFO: Beginning data transformation for dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.510756Z","level":"info","event":"INFO: Transforming data for DimLieux...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.512960Z","level":"info","event":"SUCCESS: Transformed 20 unique locations for DimLieux.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.513124Z","level":"info","event":"INFO: Transforming data for DimConditionsMeteo...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.514305Z","level":"info","event":"SUCCESS: Transformed 6 unique conditions for DimConditionsMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.514446Z","level":"info","event":"INFO: Transforming data for DimTemps...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.519742Z","level":"info","event":"SUCCESS: Transformed 7 unique time entries for DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.519897Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.519999Z","level":"info","event":"INFO: Preparing data for FaitDonneesMeteo (Fact Table).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.522674Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:47.522818Z","level":"info","event":"INFO: Loading dimension data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:49.114213Z","level":"info","event":"ERROR: Error loading data into DimLieux: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Dakar' for key 'DimLieux.nom_ville'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:49.114463Z","level":"info","event":"[SQL: INSERT INTO \"DimLieux\" (nom_ville, region, pays) VALUES (%(nom_ville)s, %(region)s, %(pays)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:49.114616Z","level":"info","event":"[parameters: ({'nom_ville': 'Abidjan', 'region': 'Lagunes', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Bafata', 'region': 'Bafata', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bamako', 'region': 'Bamako', 'pays': 'Mali'}, {'nom_ville': 'Bissau', 'region': 'Bissau', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bobo Dioulasso', 'region': 'Houet', 'pays': 'Burkina Faso'}, {'nom_ville': 'Bolama', 'region': 'Bolama', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bouake', 'region': 'Marahoue', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Dakar', 'region': 'Dakar', 'pays': 'Senegal'}  ... displaying 10 of 20 total bound parameter sets ...  {'nom_ville': 'Yamoussoukro', 'region': \"N'zi-Comoe\", 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Zinder', 'region': 'Zinder', 'pays': 'Niger'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:49.114716Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:50.417012Z","level":"info","event":"ERROR: Error loading data into DimConditionsMeteo: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Cloudy' for key 'DimConditionsMeteo.texte_condition'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:50.417179Z","level":"info","event":"[SQL: INSERT INTO \"DimConditionsMeteo\" (code_condition, texte_condition) VALUES (%(code_condition)s, %(texte_condition)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:50.417276Z","level":"info","event":"[parameters: ({'code_condition': 1006, 'texte_condition': 'Cloudy'}, {'code_condition': 1240, 'texte_condition': 'Light rain shower'}, {'code_condition': 1003, 'texte_condition': 'Partly cloudy'}, {'code_condition': 1063, 'texte_condition': 'Patchy rain nearby'}, {'code_condition': 1000, 'texte_condition': 'Sunny'}, {'code_condition': 1087, 'texte_condition': 'Thundery outbreaks possible'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:50.417356Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:51.921144Z","level":"info","event":"SUCCESS: Loaded 7 rows into DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:51.921316Z","level":"info","event":"SUCCESS: Dimension tables loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:51.921414Z","level":"info","event":"INFO: Reading back surrogate keys from target dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:52.223063Z","level":"info","event":"INFO: Extracted 12 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:52.524113Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.840658Z","level":"info","event":"INFO: Extracted 2705 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.840985Z","level":"info","event":"SUCCESS: Surrogate keys retrieved.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.843845Z","level":"info","event":"INFO: Joining fact data with dimension surrogate keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.844275Z","level":"info","event":"INFO: Merging with DimLieux to get id_dim_lieu_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.850715Z","level":"info","event":"WARNING: 9 records in FaitDonneesMeteo could not find a matching DimLieux entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.851723Z","level":"info","event":"INFO: After DimLieux merge. Records with id_dim_lieu: 12/21.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.854053Z","level":"info","event":"INFO: Merging with DimConditionsMeteo to get id_dim_condition_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.856931Z","level":"info","event":"WARNING: 9 records in FaitDonneesMeteo could not find a matching DimConditionsMeteo entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.858042Z","level":"info","event":"INFO: After DimConditionsMeteo merge. Records with id_dim_condition: 12/21.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.858249Z","level":"info","event":"INFO: Merging with DimTemps to get id_dim_temps_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.863158Z","level":"info","event":"INFO: After DimTemps merge. Records with id_dim_temps: 41/41.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.865586Z","level":"info","event":"WARNING: Dropped 31 rows from final fact table due to NULL foreign keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.865744Z","level":"info","event":"         Consider adjusting merge logic or source data to prevent missing dimension matches.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.865826Z","level":"info","event":"SUCCESS: Transformed 10 rows for FaitDonneesMeteo (after final FK check).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.865896Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:53.865963Z","level":"info","event":"INFO: Loading fact data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134077Z","level":"info","event":"SUCCESS: Loaded 10 rows into FaitDonneesMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134294Z","level":"info","event":"SUCCESS: Fact table loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134502Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134636Z","level":"info","event":"SUCCESS: ETL process completed successfully!","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134755Z","level":"info","event":"INFO: Attempting to close database connections and dispose of engines.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134894Z","level":"info","event":"INFO: Source database connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.134990Z","level":"info","event":"INFO: Target database (pymysql) connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.135144Z","level":"info","event":"INFO: Target database SQLAlchemy engine disposed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:56.135222Z","level":"info","event":"SUCCESS: All database connections and engines handled.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:58.038732Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:58.640006Z","level":"info","event":"INFO: Logged ETL process 'transfer_data_to_warehouse' with status 'success'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:58.640572Z","level":"info","event":"INFO: Transform/load done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T14:03:58.641082","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
