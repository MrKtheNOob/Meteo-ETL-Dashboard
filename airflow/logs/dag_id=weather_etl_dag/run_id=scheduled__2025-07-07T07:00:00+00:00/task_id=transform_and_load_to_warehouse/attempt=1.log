{"timestamp":"2025-07-07T07:48:35.049000","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-07T07:48:35.050138","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-07T07:48:36.917099Z","level":"info","event":"INFO: Starting transform/load to warehouse...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:36.917367Z","level":"info","event":"INFO: Starting ETL process...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:36.917512Z","level":"info","event":"INFO: Attempting to establish database connections...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:38.024004Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:39.162602Z","level":"info","event":"Database connection to 'meteo_warehouse' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:39.162828Z","level":"info","event":"SUCCESS: PyMySQL connections established.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.403099Z","level":"info","event":"SUCCESS: SQLAlchemy engine for target database created and tested.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.405141Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.405774Z","level":"info","event":"INFO: Beginning data extraction from source database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.585862Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.763012Z","level":"info","event":"INFO: Extracted 8 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.948310Z","level":"info","event":"INFO: Extracted 27 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.949626Z","level":"info","event":"SUCCESS: All necessary data extracted from source tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.949866Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.950056Z","level":"info","event":"INFO: Beginning data transformation for dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.950238Z","level":"info","event":"INFO: Transforming data for DimLieux...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.956814Z","level":"info","event":"SUCCESS: Transformed 20 unique locations for DimLieux.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.957282Z","level":"info","event":"INFO: Transforming data for DimConditionsMeteo...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.961006Z","level":"info","event":"SUCCESS: Transformed 8 unique conditions for DimConditionsMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.961387Z","level":"info","event":"INFO: Transforming data for DimTemps...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.973831Z","level":"info","event":"SUCCESS: Transformed 12 unique time entries for DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.974302Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.974543Z","level":"info","event":"INFO: Preparing data for FaitDonneesMeteo (Fact Table).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.979907Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:42.981377Z","level":"info","event":"INFO: Loading dimension data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.028586Z","level":"info","event":"ERROR: Error loading data into DimLieux: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Dakar' for key 'DimLieux.nom_ville'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.028862Z","level":"info","event":"[SQL: INSERT INTO \"DimLieux\" (nom_ville, region, pays) VALUES (%(nom_ville)s, %(region)s, %(pays)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.029072Z","level":"info","event":"[parameters: ({'nom_ville': 'Abidjan', 'region': 'Lagunes', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Bafata', 'region': 'Bafata', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bamako', 'region': 'Bamako', 'pays': 'Mali'}, {'nom_ville': 'Bissau', 'region': 'Bissau', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bobo Dioulasso', 'region': 'Houet', 'pays': 'Burkina Faso'}, {'nom_ville': 'Bolama', 'region': 'Bolama', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bouake', 'region': 'Marahoue', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Dakar', 'region': 'Dakar', 'pays': 'Senegal'}  ... displaying 10 of 20 total bound parameter sets ...  {'nom_ville': 'Yamoussoukro', 'region': \"N'zi-Comoe\", 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Zinder', 'region': 'Zinder', 'pays': 'Niger'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.029237Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.742460Z","level":"info","event":"ERROR: Error loading data into DimConditionsMeteo: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Cloudy' for key 'DimConditionsMeteo.texte_condition'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.743952Z","level":"info","event":"[SQL: INSERT INTO \"DimConditionsMeteo\" (code_condition, texte_condition) VALUES (%(code_condition)s, %(texte_condition)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.744211Z","level":"info","event":"[parameters: ({'code_condition': 1006, 'texte_condition': 'Cloudy'}, {'code_condition': 1183, 'texte_condition': 'Light rain'}, {'code_condition': 1240, 'texte_condition': 'Light rain shower'}, {'code_condition': 1030, 'texte_condition': 'Mist'}, {'code_condition': 1276, 'texte_condition': 'Moderate or heavy rain with thunder'}, {'code_condition': 1003, 'texte_condition': 'Partly cloudy'}, {'code_condition': 1063, 'texte_condition': 'Patchy rain nearby'}, {'code_condition': 1000, 'texte_condition': 'Sunny'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:44.744460Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:45.644564Z","level":"info","event":"SUCCESS: Loaded 12 rows into DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:45.644800Z","level":"info","event":"SUCCESS: Dimension tables loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:45.645097Z","level":"info","event":"INFO: Reading back surrogate keys from target dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:45.824016Z","level":"info","event":"INFO: Extracted 12 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.007993Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.968140Z","level":"info","event":"INFO: Extracted 3200 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.968404Z","level":"info","event":"SUCCESS: Surrogate keys retrieved.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.974262Z","level":"info","event":"INFO: Joining fact data with dimension surrogate keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.975740Z","level":"info","event":"INFO: Merging with DimLieux to get id_dim_lieu_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.990106Z","level":"info","event":"WARNING: 9 records in FaitDonneesMeteo could not find a matching DimLieux entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.993008Z","level":"info","event":"INFO: After DimLieux merge. Records with id_dim_lieu: 18/27.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:46.993248Z","level":"info","event":"INFO: Merging with DimConditionsMeteo to get id_dim_condition_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.011464Z","level":"info","event":"WARNING: 7 records in FaitDonneesMeteo could not find a matching DimConditionsMeteo entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.011728Z","level":"info","event":"INFO: After DimConditionsMeteo merge. Records with id_dim_condition: 20/27.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.011885Z","level":"info","event":"INFO: Merging with DimTemps to get id_dim_temps_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.035952Z","level":"info","event":"INFO: After DimTemps merge. Records with id_dim_temps: 119/119.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.044668Z","level":"info","event":"WARNING: Dropped 65 rows from final fact table due to NULL foreign keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.045188Z","level":"info","event":"         Consider adjusting merge logic or source data to prevent missing dimension matches.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.046146Z","level":"info","event":"SUCCESS: Transformed 54 rows for FaitDonneesMeteo (after final FK check).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.046799Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.047048Z","level":"info","event":"INFO: Loading fact data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.983375Z","level":"info","event":"SUCCESS: Loaded 54 rows into FaitDonneesMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.983680Z","level":"info","event":"SUCCESS: Fact table loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.984034Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.984269Z","level":"info","event":"SUCCESS: ETL process completed successfully!","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:47.984465Z","level":"info","event":"INFO: Attempting to close database connections and dispose of engines.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:48.020201Z","level":"info","event":"INFO: Source database connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:48.020434Z","level":"info","event":"INFO: Target database (pymysql) connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:48.020605Z","level":"info","event":"INFO: Target database SQLAlchemy engine disposed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:48.020739Z","level":"info","event":"SUCCESS: All database connections and engines handled.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:49.067507Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:49.422879Z","level":"info","event":"INFO: Logged ETL process 'transfer_data_to_warehouse' with status 'success'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:49.423174Z","level":"info","event":"INFO: Transform/load done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-07T07:48:49.429442","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
