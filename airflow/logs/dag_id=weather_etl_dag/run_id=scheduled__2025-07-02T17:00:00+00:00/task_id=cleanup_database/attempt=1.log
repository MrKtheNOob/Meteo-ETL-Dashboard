{"timestamp":"2025-07-02T17:00:03.623388","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-02T17:00:03.624928","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-02T17:00:04.387080Z","level":"info","event":"INFO: Starting DB cleanup...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:08.740058Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:08.740422Z","level":"info","event":"--- Disabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:09.440376Z","level":"info","event":"SUCCESS: Disabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:09.440661Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:09.440834Z","level":"info","event":"--- Dropping existing tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:09.441085Z","level":"info","event":"--- Dropping table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:10.140827Z","level":"info","event":"SUCCESS: Dropping table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:10.141085Z","level":"info","event":"--- Dropping table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:10.849001Z","level":"info","event":"SUCCESS: Dropping table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:10.849277Z","level":"info","event":"--- Dropping table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:11.544381Z","level":"info","event":"SUCCESS: Dropping table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:11.544555Z","level":"info","event":"--- Re-enabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:12.246626Z","level":"info","event":"SUCCESS: Re-enabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:12.246836Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:12.247115Z","level":"info","event":"--- Creating new tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:12.247266Z","level":"info","event":"--- Creating table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:12.948503Z","level":"info","event":"SUCCESS: Creating table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:12.948789Z","level":"info","event":"--- Creating table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:13.651932Z","level":"info","event":"SUCCESS: Creating table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:13.652194Z","level":"info","event":"--- Creating table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.352034Z","level":"info","event":"SUCCESS: Creating table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.385700Z","level":"info","event":"--- Creating table etl_logs ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.659198Z","level":"info","event":"ERROR: Failed to execute 'Creating table etl_logs' - (1050, \"Table 'etl_logs' already exists\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.659451Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.659603Z","level":"info","event":"SUCCESS: Database cleanup and recreation completed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.659744Z","level":"info","event":"INFO: DB cleanup done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T17:00:14.660898","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
