{"timestamp":"2025-07-04T01:00:03.749812","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-04T01:00:03.751025","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-04T01:00:04.255207Z","level":"info","event":"INFO: Starting DB cleanup...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.165485Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.165827Z","level":"info","event":"--- Disabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.466264Z","level":"info","event":"SUCCESS: Disabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.466436Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.466549Z","level":"info","event":"--- Dropping existing tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.466693Z","level":"info","event":"--- Dropping table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.768560Z","level":"info","event":"SUCCESS: Dropping table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:05.768793Z","level":"info","event":"--- Dropping table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:06.271651Z","level":"info","event":"SUCCESS: Dropping table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:06.271844Z","level":"info","event":"--- Dropping table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:06.670952Z","level":"info","event":"SUCCESS: Dropping table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:06.671129Z","level":"info","event":"--- Re-enabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.072431Z","level":"info","event":"SUCCESS: Re-enabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.072604Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.072690Z","level":"info","event":"--- Creating new tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.072814Z","level":"info","event":"--- Creating table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.472432Z","level":"info","event":"SUCCESS: Creating table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.472627Z","level":"info","event":"--- Creating table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.875235Z","level":"info","event":"SUCCESS: Creating table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:07.875452Z","level":"info","event":"--- Creating table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.175664Z","level":"info","event":"SUCCESS: Creating table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.175881Z","level":"info","event":"--- Creating table etl_logs ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.376960Z","level":"info","event":"ERROR: Failed to execute 'Creating table etl_logs' - (1050, \"Table 'etl_logs' already exists\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.377271Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.377522Z","level":"info","event":"SUCCESS: Database cleanup and recreation completed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.377738Z","level":"info","event":"INFO: DB cleanup done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T01:00:08.377960","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
