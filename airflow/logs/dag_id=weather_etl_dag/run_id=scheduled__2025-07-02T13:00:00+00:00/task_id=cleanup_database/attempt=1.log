{"timestamp":"2025-07-02T13:00:04.272536","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-02T13:00:04.273648","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-02T13:00:04.892346Z","level":"info","event":"INFO: Starting DB cleanup...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:07.596622Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:07.596896Z","level":"info","event":"--- Disabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:08.197380Z","level":"info","event":"SUCCESS: Disabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:08.197692Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:08.197887Z","level":"info","event":"--- Dropping existing tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:08.198042Z","level":"info","event":"--- Dropping table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:08.897302Z","level":"info","event":"SUCCESS: Dropping table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:08.897519Z","level":"info","event":"--- Dropping table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:09.499986Z","level":"info","event":"SUCCESS: Dropping table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:09.500242Z","level":"info","event":"--- Dropping table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:10.101471Z","level":"info","event":"SUCCESS: Dropping table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:10.101652Z","level":"info","event":"--- Re-enabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:11.306798Z","level":"info","event":"SUCCESS: Re-enabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:11.307203Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:11.307499Z","level":"info","event":"--- Creating new tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:11.307788Z","level":"info","event":"--- Creating table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:12.006454Z","level":"info","event":"SUCCESS: Creating table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:12.006764Z","level":"info","event":"--- Creating table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:12.608004Z","level":"info","event":"SUCCESS: Creating table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:12.608231Z","level":"info","event":"--- Creating table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.209841Z","level":"info","event":"SUCCESS: Creating table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.210151Z","level":"info","event":"--- Creating table etl_logs ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.509980Z","level":"info","event":"ERROR: Failed to execute 'Creating table etl_logs' - (1050, \"Table 'etl_logs' already exists\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.510230Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.510386Z","level":"info","event":"SUCCESS: Database cleanup and recreation completed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.510527Z","level":"info","event":"INFO: DB cleanup done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T13:00:13.511003","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
