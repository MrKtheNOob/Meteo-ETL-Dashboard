{"timestamp":"2025-07-04T11:53:41.204289","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-04T11:53:41.205893","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-04T11:53:42.489984Z","level":"info","event":"INFO: Starting transform/load to warehouse...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:42.490535Z","level":"info","event":"INFO: Starting ETL process...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:42.490826Z","level":"info","event":"INFO: Attempting to establish database connections...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:44.028186Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:45.564160Z","level":"info","event":"Database connection to 'meteo_warehouse' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:45.564481Z","level":"info","event":"SUCCESS: PyMySQL connections established.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:51.529252Z","level":"info","event":"SUCCESS: SQLAlchemy engine for target database created and tested.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:51.529565Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:51.529690Z","level":"info","event":"INFO: Beginning data extraction from source database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:51.834655Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.130561Z","level":"info","event":"INFO: Extracted 5 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.363536Z","level":"info","event":"INFO: Extracted 25 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.363771Z","level":"info","event":"SUCCESS: All necessary data extracted from source tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.364049Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.364388Z","level":"info","event":"INFO: Beginning data transformation for dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.364680Z","level":"info","event":"INFO: Transforming data for DimLieux...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.369968Z","level":"info","event":"SUCCESS: Transformed 20 unique locations for DimLieux.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.370240Z","level":"info","event":"INFO: Transforming data for DimConditionsMeteo...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.374666Z","level":"info","event":"SUCCESS: Transformed 5 unique conditions for DimConditionsMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.374910Z","level":"info","event":"INFO: Transforming data for DimTemps...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.388107Z","level":"info","event":"SUCCESS: Transformed 7 unique time entries for DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.388381Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.388588Z","level":"info","event":"INFO: Preparing data for FaitDonneesMeteo (Fact Table).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.390963Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:52.391204Z","level":"info","event":"INFO: Loading dimension data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:53.553003Z","level":"info","event":"ERROR: Error loading data into DimLieux: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Dakar' for key 'DimLieux.nom_ville'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:53.553283Z","level":"info","event":"[SQL: INSERT INTO \"DimLieux\" (nom_ville, region, pays) VALUES (%(nom_ville)s, %(region)s, %(pays)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:53.553511Z","level":"info","event":"[parameters: ({'nom_ville': 'Abidjan', 'region': 'Lagunes', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Bafata', 'region': 'Bafata', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bamako', 'region': 'Bamako', 'pays': 'Mali'}, {'nom_ville': 'Bissau', 'region': 'Bissau', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bobo Dioulasso', 'region': 'Houet', 'pays': 'Burkina Faso'}, {'nom_ville': 'Bolama', 'region': 'Bolama', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bouake', 'region': 'Marahoue', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Dakar', 'region': 'Dakar', 'pays': 'Senegal'}  ... displaying 10 of 20 total bound parameter sets ...  {'nom_ville': 'Yamoussoukro', 'region': \"N'zi-Comoe\", 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Zinder', 'region': 'Zinder', 'pays': 'Niger'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:53.553799Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:55.334292Z","level":"info","event":"ERROR: Error loading data into DimConditionsMeteo: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Mist' for key 'DimConditionsMeteo.texte_condition'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:55.334537Z","level":"info","event":"[SQL: INSERT INTO \"DimConditionsMeteo\" (code_condition, texte_condition) VALUES (%(code_condition)s, %(texte_condition)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:55.334696Z","level":"info","event":"[parameters: ({'code_condition': 1030, 'texte_condition': 'Mist'}, {'code_condition': 1189, 'texte_condition': 'Moderate rain'}, {'code_condition': 1003, 'texte_condition': 'Partly cloudy'}, {'code_condition': 1063, 'texte_condition': 'Patchy rain nearby'}, {'code_condition': 1000, 'texte_condition': 'Sunny'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:55.334829Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:57.135397Z","level":"info","event":"SUCCESS: Loaded 7 rows into DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:57.135750Z","level":"info","event":"SUCCESS: Dimension tables loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:57.136163Z","level":"info","event":"INFO: Reading back surrogate keys from target dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:57.449047Z","level":"info","event":"INFO: Extracted 12 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:57.752686Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:58.996170Z","level":"info","event":"INFO: Extracted 2938 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:58.996540Z","level":"info","event":"SUCCESS: Surrogate keys retrieved.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.001476Z","level":"info","event":"INFO: Joining fact data with dimension surrogate keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.004508Z","level":"info","event":"INFO: Merging with DimLieux to get id_dim_lieu_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.017592Z","level":"info","event":"WARNING: 12 records in FaitDonneesMeteo could not find a matching DimLieux entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.020909Z","level":"info","event":"INFO: After DimLieux merge. Records with id_dim_lieu: 13/25.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.021327Z","level":"info","event":"INFO: Merging with DimConditionsMeteo to get id_dim_condition_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.030202Z","level":"info","event":"WARNING: 8 records in FaitDonneesMeteo could not find a matching DimConditionsMeteo entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.031887Z","level":"info","event":"INFO: After DimConditionsMeteo merge. Records with id_dim_condition: 17/25.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.032199Z","level":"info","event":"INFO: Merging with DimTemps to get id_dim_temps_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.038714Z","level":"info","event":"INFO: After DimTemps merge. Records with id_dim_temps: 50/50.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.041939Z","level":"info","event":"WARNING: Dropped 34 rows from final fact table due to NULL foreign keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.042227Z","level":"info","event":"         Consider adjusting merge logic or source data to prevent missing dimension matches.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.042395Z","level":"info","event":"SUCCESS: Transformed 16 rows for FaitDonneesMeteo (after final FK check).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.042536Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:53:59.042679Z","level":"info","event":"INFO: Loading fact data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.037816Z","level":"info","event":"SUCCESS: Loaded 16 rows into FaitDonneesMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.038104Z","level":"info","event":"SUCCESS: Fact table loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.038423Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.038730Z","level":"info","event":"SUCCESS: ETL process completed successfully!","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.038870Z","level":"info","event":"INFO: Attempting to close database connections and dispose of engines.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.039705Z","level":"info","event":"INFO: Source database connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.039989Z","level":"info","event":"INFO: Target database (pymysql) connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.040469Z","level":"info","event":"INFO: Target database SQLAlchemy engine disposed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:01.040697Z","level":"info","event":"SUCCESS: All database connections and engines handled.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:02.662174Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:03.186175Z","level":"info","event":"INFO: Logged ETL process 'transfer_data_to_warehouse' with status 'success'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:03.186618Z","level":"info","event":"INFO: Transform/load done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-04T11:54:03.188292","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
