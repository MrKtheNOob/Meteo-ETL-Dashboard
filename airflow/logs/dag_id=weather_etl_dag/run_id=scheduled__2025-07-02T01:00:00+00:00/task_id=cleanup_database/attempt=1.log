{"timestamp":"2025-07-02T01:00:05.719639","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-02T01:00:05.720727","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-02T01:00:06.317747Z","level":"info","event":"INFO: Starting DB cleanup...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.001338Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.001564Z","level":"info","event":"--- Disabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.205929Z","level":"info","event":"SUCCESS: Disabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.206157Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.206313Z","level":"info","event":"--- Dropping existing tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.206492Z","level":"info","event":"--- Dropping table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.502320Z","level":"info","event":"SUCCESS: Dropping table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.502631Z","level":"info","event":"--- Dropping table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.703543Z","level":"info","event":"SUCCESS: Dropping table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.703733Z","level":"info","event":"--- Dropping table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.903076Z","level":"info","event":"SUCCESS: Dropping table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:07.903333Z","level":"info","event":"--- Re-enabling foreign key checks ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.103886Z","level":"info","event":"SUCCESS: Re-enabling foreign key checks","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.104200Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.104355Z","level":"info","event":"--- Creating new tables ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.104606Z","level":"info","event":"--- Creating table lieux ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.404719Z","level":"info","event":"SUCCESS: Creating table lieux","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.404921Z","level":"info","event":"--- Creating table conditions_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.605307Z","level":"info","event":"SUCCESS: Creating table conditions_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.605893Z","level":"info","event":"--- Creating table donnees_meteo ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.905772Z","level":"info","event":"SUCCESS: Creating table donnees_meteo","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:08.906012Z","level":"info","event":"--- Creating table etl_logs ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:09.010033Z","level":"info","event":"ERROR: Failed to execute 'Creating table etl_logs' - (1050, \"Table 'etl_logs' already exists\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:09.012737Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:09.012909Z","level":"info","event":"SUCCESS: Database cleanup and recreation completed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:09.013046Z","level":"info","event":"INFO: DB cleanup done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-02T01:00:09.014168","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
