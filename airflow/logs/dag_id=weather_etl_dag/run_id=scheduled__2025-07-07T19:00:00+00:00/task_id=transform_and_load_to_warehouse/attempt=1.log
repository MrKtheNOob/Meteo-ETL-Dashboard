{"timestamp":"2025-07-08T19:46:53.589732","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-08T19:46:53.590830","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-08T19:46:54.315327Z","level":"info","event":"INFO: Starting transform/load to warehouse...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:54.315490Z","level":"info","event":"INFO: Starting ETL process...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:54.315617Z","level":"info","event":"INFO: Attempting to establish database connections...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:55.167155Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:56.242924Z","level":"info","event":"Database connection to 'meteo_warehouse' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:56.243394Z","level":"info","event":"SUCCESS: PyMySQL connections established.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:58.764867Z","level":"info","event":"SUCCESS: SQLAlchemy engine for target database created and tested.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:58.765198Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:58.765406Z","level":"info","event":"INFO: Beginning data extraction from source database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:58.947685Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.123711Z","level":"info","event":"INFO: Extracted 7 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.308470Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.308740Z","level":"info","event":"SUCCESS: All necessary data extracted from source tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.308903Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.309107Z","level":"info","event":"INFO: Beginning data transformation for dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.309996Z","level":"info","event":"INFO: Transforming data for DimLieux...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.313950Z","level":"info","event":"SUCCESS: Transformed 20 unique locations for DimLieux.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.314199Z","level":"info","event":"INFO: Transforming data for DimConditionsMeteo...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.315758Z","level":"info","event":"SUCCESS: Transformed 7 unique conditions for DimConditionsMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.315974Z","level":"info","event":"INFO: Transforming data for DimTemps...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.325940Z","level":"info","event":"SUCCESS: Transformed 7 unique time entries for DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.326225Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.326407Z","level":"info","event":"INFO: Preparing data for FaitDonneesMeteo (Fact Table).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.332884Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:46:59.333345Z","level":"info","event":"INFO: Loading dimension data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.200286Z","level":"info","event":"ERROR: Error loading data into DimLieux: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Dakar' for key 'DimLieux.nom_ville'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.200562Z","level":"info","event":"[SQL: INSERT INTO \"DimLieux\" (nom_ville, region, pays) VALUES (%(nom_ville)s, %(region)s, %(pays)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.200729Z","level":"info","event":"[parameters: ({'nom_ville': 'Abidjan', 'region': 'Lagunes', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Bafata', 'region': 'Bafata', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bamako', 'region': 'Bamako', 'pays': 'Mali'}, {'nom_ville': 'Bissau', 'region': 'Bissau', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bobo Dioulasso', 'region': 'Houet', 'pays': 'Burkina Faso'}, {'nom_ville': 'Bolama', 'region': 'Bolama', 'pays': 'Guinea-Bissau'}, {'nom_ville': 'Bouake', 'region': 'Marahoue', 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Dakar', 'region': 'Dakar', 'pays': 'Senegal'}  ... displaying 10 of 20 total bound parameter sets ...  {'nom_ville': 'Yamoussoukro', 'region': \"N'zi-Comoe\", 'pays': \"Cote d'Ivoire\"}, {'nom_ville': 'Zinder', 'region': 'Zinder', 'pays': 'Niger'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.200871Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.920753Z","level":"info","event":"ERROR: Error loading data into DimConditionsMeteo: (pymysql.err.IntegrityError) (1062, \"Duplicate entry 'Clear' for key 'DimConditionsMeteo.texte_condition'\")","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.921144Z","level":"info","event":"[SQL: INSERT INTO \"DimConditionsMeteo\" (code_condition, texte_condition) VALUES (%(code_condition)s, %(texte_condition)s)]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.921344Z","level":"info","event":"[parameters: ({'code_condition': 1000, 'texte_condition': 'Clear'}, {'code_condition': 1240, 'texte_condition': 'Light rain shower'}, {'code_condition': 1030, 'texte_condition': 'Mist'}, {'code_condition': 1276, 'texte_condition': 'Moderate or heavy rain with thunder'}, {'code_condition': 1003, 'texte_condition': 'Partly cloudy'}, {'code_condition': 1273, 'texte_condition': 'Patchy light rain with thunder'}, {'code_condition': 1063, 'texte_condition': 'Patchy rain nearby'})]","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:00.921537Z","level":"info","event":"(Background on this error at: https://sqlalche.me/e/14/gkpj)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:01.822685Z","level":"info","event":"SUCCESS: Loaded 7 rows into DimTemps.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:01.822954Z","level":"info","event":"SUCCESS: Dimension tables loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:01.823098Z","level":"info","event":"INFO: Reading back surrogate keys from target dimension tables.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:02.005522Z","level":"info","event":"INFO: Extracted 12 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:02.183789Z","level":"info","event":"INFO: Extracted 20 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:02.996532Z","level":"info","event":"INFO: Extracted 3884 rows from query.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:02.996900Z","level":"info","event":"SUCCESS: Surrogate keys retrieved.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.003797Z","level":"info","event":"INFO: Joining fact data with dimension surrogate keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.004323Z","level":"info","event":"INFO: Merging with DimLieux to get id_dim_lieu_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.013256Z","level":"info","event":"WARNING: 9 records in FaitDonneesMeteo could not find a matching DimLieux entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.014257Z","level":"info","event":"INFO: After DimLieux merge. Records with id_dim_lieu: 11/20.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.014439Z","level":"info","event":"INFO: Merging with DimConditionsMeteo to get id_dim_condition_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.022381Z","level":"info","event":"WARNING: 4 records in FaitDonneesMeteo could not find a matching DimConditionsMeteo entry. Check data consistency.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.024427Z","level":"info","event":"INFO: After DimConditionsMeteo merge. Records with id_dim_condition: 16/20.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.024586Z","level":"info","event":"INFO: Merging with DimTemps to get id_dim_temps_fk...","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.030375Z","level":"info","event":"INFO: After DimTemps merge. Records with id_dim_temps: 83/83.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.032899Z","level":"info","event":"WARNING: Dropped 55 rows from final fact table due to NULL foreign keys.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.033105Z","level":"info","event":"         Consider adjusting merge logic or source data to prevent missing dimension matches.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.033194Z","level":"info","event":"SUCCESS: Transformed 28 rows for FaitDonneesMeteo (after final FK check).","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.033360Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.033505Z","level":"info","event":"INFO: Loading fact data into target database.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.980471Z","level":"info","event":"SUCCESS: Loaded 28 rows into FaitDonneesMeteo.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.980735Z","level":"info","event":"SUCCESS: Fact table loaded.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.981591Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.981893Z","level":"info","event":"SUCCESS: ETL process completed successfully!","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:03.984734Z","level":"info","event":"INFO: Attempting to close database connections and dispose of engines.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:04.015956Z","level":"info","event":"INFO: Source database connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:04.016343Z","level":"info","event":"INFO: Target database (pymysql) connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:04.016638Z","level":"info","event":"INFO: Target database SQLAlchemy engine disposed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:04.016893Z","level":"info","event":"SUCCESS: All database connections and engines handled.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:05.059676Z","level":"info","event":"Database connection to 'meteo' established successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:05.419824Z","level":"info","event":"INFO: Logged ETL process 'transfer_data_to_warehouse' with status 'success'.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:05.420217Z","level":"info","event":"INFO: Transform/load done.","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-08T19:47:05.421182","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
